
import Movie;
import java.util.Comparator;
public class Comparators{// Comparator class to compare Movie objects based on different attributes
    
    public class Poster_link_Comparator implements Comparator<Movie> { // Comparator for poster link
        @Override
        public int compare(Movie m1, Movie m2) {
            return m1.getPoster_link().compare(m2.getPoster_link());
        }        
    }

    public class Series_Title_Comparator implements Comparator<Movie> { // Comparator for series title
        @Override
        public int compare(Movie m1, Movie m2) {
            return m1.getSeries_title().compare(m2.getSeries_title());
        }
    }

    public class Released_YearComparator implements Comparator<Movie> {
        @Override
        public int compare(Movie m1, Movie m2) {
            return Integer.compare(m1.getReleased_year(), m2.getReleased_year());
        }
    }
    public class Certificate_Comparator implements Comparator<Movie>{
        @Override
        public int compare(Movie m1, Movie m2) {
            return m1.getCertificate().compareTo(m2.getCertificate());
        }
    }
    public class Runtime_Comparator implements Comparator<Movie>{
        @Override
        public int compare(Movie m1, Movie m2) {
            return Integer.compare(m1.getRuntime(), m2.getRuntime());
        }
    }
    public class Genre_Comparator implements Comparator<Movie>{
        @Override
        public int compare(Movie m1, Movie m2) {
            return m1.getGenre().compareTo(m2.getGenre());
        }
    }
    public static class IMDB_Rating_Comparator implements Comparator<Movie>{
        @Override
        public int compare(Movie m1, Movie m2) {
            return Double.compare(m1.getIMDB_rating(), m2.getIMDB_rating());
        }
    }

    public class Overview_Comparator implements Comparator<Movie>{
        @Override
        public int compare(Movie m1, Movie m2) {
            return m1.getOverview().compareTo(m2.getOverview());
        }   
    }   

    public class Meta_score_Comparator implements Comparator<Movie>{
        @Override
        public int compare(Movie m1, Movie m2) {
            return Integer.compare(m1.getMeta_score(), m2.getMeta_score());
        }
    }
    public class Director_Comparator implements Comparator<Movie>{
        public int compare(Movie m1, Movie m2) {
            return m1.getDirector().compareTo(m2.getDirector());
        }
    }
    public class Stars_Comparator implements Comparator<Movie>{
        @Override
        public int compare(Movie m1, Movie m2) {
            return m1.getStars().compareTo(m2.getStars());
        }
    }
    public class No_of_Votes_Comparator implements Comparator<Movie>{
        @Override
        public int compare(Movie m1, Movie m2) {
            return Integer.compare(m1.getNo_of_votes(), m2.getNo_of_votes());
        }
    }
    public class Gross_Collection_Comparator implements Comparator<Movie>{
        @Override
        public int compare(Movie m1, Movie m2) {
            return Double.compare(m1.getGross_collection(), m2.getGross_collection());
        }
    }       
}
